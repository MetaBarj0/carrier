# This file describes how to compose various required images intot the final
# appliance.
# You have all freedom to compose your file as you like BUT you must pay
# attention of the image and the container name of the main service of your
# appliance.
# The main service is the one reference in the SERVICE variable within the
# manifest file of the appliance.

version: '3.2'

services:
  # this is the unique service of this very simple appliance. It is just a shell
  # one can attach to to develop cpp stuff.
  shell:
    # The image name specified here is used in the manifest file. Actually,
    # docker-compose does not have the role to build services' images as it does
    # not give enough freedom to the user (squashing, pruning intermediate
    # images in case of multi-stage build). Therefore, this is the
    # manage-appliance script that will create all images using an
    # auto-generated Dockerfile for each service
    image: metabarj0/devenv_cpp_shell

    # mount point of volume in the running appliance
    volumes:
      - type: volume
        source: devenv_cpp_home
        target: /home/devenv_cpp
      - type: volume
        source: devenv_cpp_.vim
        target: /home/devenv_cpp/.vim
      - type: volume
        source: devenv_cpp_.ssh
        target: /home/devenv_cpp/.ssh
      - type: volume
        source: devenv_cpp_src
        target: /home/devenv_cpp/src

    entrypoint :
      - bash
      - --login
      - -c
      - /usr/local/bin/entrypoint.sh

    # this service is a shell, activate tty behavior and disable streamed
    # logging
    stdin_open: true
    tty: true
    logging:
      driver: 'none'

    environment:
      - TERMINFO=/usr/local/share/terminfo
      - TERM=xterm-256color
      - GIT_EXEC_PATH=/usr/local/libexec/git-core/

# appliance volumes
volumes:
  # contains the home directory content for the devenv_cpp user
  devenv_cpp_home:
  # vim configuration
  devenv_cpp_.vim:
  # ssh configuration
  devenv_cpp_.ssh:
  # designed to contain code bases
  devenv_cpp_src:
  # output directory, may contain built sources
  devenv_cpp_out:
