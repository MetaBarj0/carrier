# entry Dockerfile, will build an image containing all that is necessary to
# build sources (scripts) and to manipulate docker images and container
# thanks to a bind mount of the docker socket and a couple of Dockerfiles

# builder image, relying on docker client to trigger the build of sources
FROM metabarj0/docker-cli

# receive the repository name as build arg and forward it to env for future uses
ARG REPOSITORY
ENV REPOSITORY=${REPOSITORY}

# isolate work directory
WORKDIR /tmp

# get scripts to build docker images and build the sources
COPY Dockerfile.build-sources \
     build-image.sh \
     build-sources.sh \
     functions.sh \
     exportPackageTo \
     ./

# use the legacy entry point of the docker-cli image, verifying that the docker
# socket is present
ENTRYPOINT [ "entrypoint.sh", "/tmp/build-image.sh" ]
